{"version":3,"sources":["../../src/utils/webpack-utils.js"],"names":["autoprefixer","require","flexbugs","TerserPlugin","MiniCssExtractPlugin","OptimizeCssAssetsPlugin","isWsl","GatsbyWebpackStatsExtractor","builtinPlugins","eslintConfig","module","exports","stage","program","assetRelativeRoot","vendorRegex","supportedBrowsers","browserslist","PRODUCTION","includes","isSSR","makeExternalOnly","original","options","rule","include","makeInternalOnly","exclude","ident","loaders","json","loader","resolve","yaml","null","raw","style","miniCssExtract","css","sourceMap","camelCase","localIdentName","postcss","plugins","overrideBrowserslist","postcssOpts","flexbox","file","name","url","limit","js","eslint","schema","imports","rules","modulesThatUseGatsby","test","modulePath","some","path","type","use","dependencies","jsOptions","babelrc","configFile","compact","presets","sourceMaps","enforce","fonts","images","media","miscAssets","browsers","importLoaders","unshift","hmr","modules","internal","external","cssModules","minifyJs","terserOptions","cache","parallel","ie8","mangle","safari10","parse","ecma","compress","output","minifyCss","extractText","filename","chunkFilename","moment","ignore","extractStats"],"mappings":"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","sourcesContent":["// @flow\n\nconst autoprefixer = require(`autoprefixer`)\nconst flexbugs = require(`postcss-flexbugs-fixes`)\nconst TerserPlugin = require(`terser-webpack-plugin`)\nconst MiniCssExtractPlugin = require(`mini-css-extract-plugin`)\nconst OptimizeCssAssetsPlugin = require(`optimize-css-assets-webpack-plugin`)\nconst isWsl = require(`is-wsl`)\n\nconst GatsbyWebpackStatsExtractor = require(`./gatsby-webpack-stats-extractor`)\n\nconst builtinPlugins = require(`./webpack-plugins`)\nconst eslintConfig = require(`./eslint-config`)\n\ntype LoaderSpec = string | { loader: string, options?: Object }\ntype LoaderResolver<T: Object> = (options?: T) => LoaderSpec\n\ntype Condition = string | RegExp | RegExp[]\n\ntype Rule = {\n  test?: Condition,\n  use: LoaderSpec[],\n  exclude?: Condition,\n  include?: Condition,\n}\n\ntype RuleFactory<T: Object> = (options?: T) => Rule\n\ntype ContextualRuleFactory = RuleFactory<*> & {\n  internal: RuleFactory<*>,\n  external: RuleFactory<*>,\n}\n\ntype PluginInstance = any\ntype PluginFactory = (...args?: any) => PluginInstance\n\ntype BuiltinPlugins = typeof builtinPlugins\n\ntype Stage = \"develop\" | \"develop-html\" | \"build-javascript\" | \"build-html\"\n\n/**\n * Configuration options for `createUtils`\n */\nexport type WebpackUtilsOptions = { stage: Stage, program: any }\n\n/**\n * Utils that produce webpack `loader` objects\n */\nexport type LoaderUtils = {\n  json: LoaderResolver<*>,\n  yaml: LoaderResolver<*>,\n  null: LoaderResolver<*>,\n  raw: LoaderResolver<*>,\n\n  style: LoaderResolver<*>,\n  css: LoaderResolver<*>,\n  postcss: LoaderResolver<{\n    browsers?: string[],\n    plugins?: Array<any> | ((loader: any) => Array<any>),\n  }>,\n\n  file: LoaderResolver<*>,\n  url: LoaderResolver<*>,\n  js: LoaderResolver<*>,\n\n  miniCssExtract: LoaderResolver<*>,\n  imports: LoaderResolver<*>,\n  exports: LoaderResolver<*>,\n\n  eslint: LoaderResolver<*>,\n}\n\n/**\n * Utils that produce webpack rule objects\n */\nexport type RuleUtils = {\n  /**\n   * Handles JavaScript compilation via babel\n   */\n  js: RuleFactory<*>,\n  yaml: RuleFactory<*>,\n  fonts: RuleFactory<*>,\n  images: RuleFactory<*>,\n  miscAssets: RuleFactory<*>,\n\n  css: ContextualRuleFactory,\n  cssModules: RuleFactory<*>,\n  postcss: ContextualRuleFactory,\n\n  eslint: RuleFactory<*>,\n}\n\nexport type PluginUtils = BuiltinPlugins & {\n  extractText: PluginFactory,\n  uglify: PluginFactory,\n  moment: PluginFactory,\n  extractStats: PluginFactory,\n}\n\n/**\n * webpack atoms namespace\n */\nexport type WebpackUtils = {\n  loaders: LoaderUtils,\n\n  rules: RuleUtils,\n\n  plugins: PluginUtils,\n}\n\n/**\n * A factory method that produces an atoms namespace\n */\nmodule.exports = async ({\n  stage,\n  program,\n}: {\n  stage: Stage,\n  program: any,\n}): Promise<WebpackUtilsOptions> => {\n  const assetRelativeRoot = `static/`\n  const vendorRegex = /(node_modules|bower_components)/\n  const supportedBrowsers = program.browserslist\n\n  const PRODUCTION = !stage.includes(`develop`)\n\n  const isSSR = stage.includes(`html`)\n\n  const makeExternalOnly = (original: RuleFactory<*>) => (\n    options = {}\n  ): Rule => {\n    let rule = original(options)\n    rule.include = vendorRegex\n    return rule\n  }\n\n  const makeInternalOnly = (original: RuleFactory<*>) => (\n    options = {}\n  ): Rule => {\n    let rule = original(options)\n    rule.exclude = vendorRegex\n    return rule\n  }\n\n  let ident = 0\n\n  const loaders: LoaderUtils = {\n    json: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`json-loader`),\n      }\n    },\n\n    yaml: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`yaml-loader`),\n      }\n    },\n\n    null: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`null-loader`),\n      }\n    },\n\n    raw: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`raw-loader`),\n      }\n    },\n\n    style: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`style-loader`),\n      }\n    },\n\n    miniCssExtract: (options = {}) => {\n      return {\n        options,\n        // use MiniCssExtractPlugin only on production builds\n        loader: PRODUCTION\n          ? MiniCssExtractPlugin.loader\n          : require.resolve(`style-loader`),\n      }\n    },\n\n    css: (options = {}) => {\n      return {\n        loader: isSSR\n          ? require.resolve(`css-loader/locals`)\n          : require.resolve(`css-loader`),\n        options: {\n          sourceMap: !PRODUCTION,\n          camelCase: `dashesOnly`,\n          // https://github.com/webpack-contrib/css-loader/issues/406\n          localIdentName: `[name]--[local]--[hash:base64:5]`,\n          ...options,\n        },\n      }\n    },\n\n    postcss: (options = {}) => {\n      let {\n        plugins,\n        overrideBrowserslist = supportedBrowsers,\n        ...postcssOpts\n      } = options\n\n      return {\n        loader: require.resolve(`postcss-loader`),\n        options: {\n          ident: `postcss-${++ident}`,\n          sourceMap: !PRODUCTION,\n          plugins: loader => {\n            plugins =\n              (typeof plugins === `function` ? plugins(loader) : plugins) || []\n\n            return [\n              flexbugs,\n              autoprefixer({ overrideBrowserslist, flexbox: `no-2009` }),\n              ...plugins,\n            ]\n          },\n          ...postcssOpts,\n        },\n      }\n    },\n\n    file: (options = {}) => {\n      return {\n        loader: require.resolve(`file-loader`),\n        options: {\n          name: `${assetRelativeRoot}[name]-[hash].[ext]`,\n          ...options,\n        },\n      }\n    },\n\n    url: (options = {}) => {\n      return {\n        loader: require.resolve(`url-loader`),\n        options: {\n          limit: 10000,\n          name: `${assetRelativeRoot}[name]-[hash].[ext]`,\n          ...options,\n        },\n      }\n    },\n\n    js: options => {\n      return {\n        options,\n        loader: require.resolve(`./babel-loader`),\n      }\n    },\n\n    eslint: (schema = ``) => {\n      const options = eslintConfig(schema)\n\n      return {\n        options,\n        loader: require.resolve(`eslint-loader`),\n      }\n    },\n\n    imports: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`imports-loader`),\n      }\n    },\n\n    exports: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`exports-loader`),\n      }\n    },\n  }\n\n  /**\n   * Rules\n   */\n  const rules = {}\n\n  /**\n   * JavaScript loader via babel, includes userland code\n   * and packages that depend on `gatsby`\n   */\n  {\n    let js = (\n      { modulesThatUseGatsby, ...options } = { modulesThatUseGatsby: [] }\n    ) => {\n      return {\n        test: /\\.(js|mjs|jsx)$/,\n        include: modulePath => {\n          // when it's not coming from node_modules we treat it as a source file.\n          if (!vendorRegex.test(modulePath)) {\n            return true\n          }\n\n          // If the module uses Gatsby as a dependency\n          // we want to treat it as src so we can extract queries\n          return modulesThatUseGatsby.some(module =>\n            modulePath.includes(module.path)\n          )\n        },\n        type: `javascript/auto`,\n        use: [loaders.js(options)],\n      }\n    }\n\n    rules.js = js\n  }\n\n  /**\n   * Node_modules JavaScript loader via babel\n   * Excludes core-js & babel-runtime to speedup babel transpilation\n   * Excludes modules that use Gatsby since the `rules.js` already transpiles those\n   */\n  {\n    let dependencies = (\n      { modulesThatUseGatsby, ...options } = { modulesThatUseGatsby: [] }\n    ) => {\n      const jsOptions = {\n        babelrc: false,\n        configFile: false,\n        compact: false,\n        presets: [\n          [require.resolve(`babel-preset-gatsby/dependencies`), { stage }],\n        ],\n        // If an error happens in a package, it's possible to be\n        // because it was compiled. Thus, we don't want the browser\n        // debugger to show the original code. Instead, the code\n        // being evaluated would be much more helpful.\n        sourceMaps: false,\n      }\n\n      return {\n        test: /\\.(js|mjs)$/,\n        exclude: modulePath => {\n          if (vendorRegex.test(modulePath)) {\n            // If dep uses Gatsby, exclude\n            if (\n              modulesThatUseGatsby.some(module =>\n                modulePath.includes(module.path)\n              )\n            ) {\n              return true\n            }\n            // If dep is babel-runtime or core-js, exclude\n            if (/@babel(?:\\/|\\\\{1,2})runtime|core-js/.test(modulePath)) {\n              return true\n            }\n\n            // If dep is in node_modules and none of the above, include\n            return false\n          }\n\n          // If dep is user land code, exclude\n          return true\n        },\n        type: `javascript/auto`,\n        use: [loaders.js(jsOptions)],\n      }\n    }\n\n    rules.dependencies = dependencies\n  }\n\n  {\n    let eslint = schema => {\n      return {\n        enforce: `pre`,\n        test: /\\.jsx?$/,\n        exclude: vendorRegex,\n        use: [loaders.eslint(schema)],\n      }\n    }\n\n    rules.eslint = eslint\n  }\n\n  rules.yaml = () => {\n    return {\n      test: /\\.ya?ml/,\n      use: [loaders.json(), loaders.yaml()],\n    }\n  }\n\n  /**\n   * Font loader\n   */\n  rules.fonts = () => {\n    return {\n      use: [loaders.url()],\n      test: /\\.(eot|otf|ttf|woff(2)?)(\\?.*)?$/,\n    }\n  }\n\n  /**\n   * Loads image assets, inlines images via a data URI if they are below\n   * the size threshold\n   */\n  rules.images = () => {\n    return {\n      use: [loaders.url()],\n      test: /\\.(ico|svg|jpg|jpeg|png|gif|webp)(\\?.*)?$/,\n    }\n  }\n\n  /**\n   * Loads audio and video and inlines them via a data URI if they are below\n   * the size threshold\n   */\n  rules.media = () => {\n    return {\n      use: [loaders.url()],\n      test: /\\.(mp4|webm|ogv|wav|mp3|m4a|aac|oga|flac)$/,\n    }\n  }\n\n  /**\n   * Loads assets without inlining\n   */\n  rules.miscAssets = () => {\n    return {\n      use: [loaders.file()],\n      test: /\\.pdf$/,\n    }\n  }\n\n  /**\n   * CSS style loader.\n   */\n  {\n    const css = ({ browsers, ...options } = {}) => {\n      const use = [\n        loaders.css({ ...options, importLoaders: 1 }),\n        loaders.postcss({ browsers }),\n      ]\n      if (!isSSR) use.unshift(loaders.miniCssExtract({ hmr: !options.modules }))\n\n      return {\n        use,\n        test: /\\.css$/,\n      }\n    }\n\n    /**\n     * CSS style loader, _excludes_ node_modules.\n     */\n    css.internal = makeInternalOnly(css)\n    css.external = makeExternalOnly(css)\n\n    const cssModules = options => {\n      const rule = css({ ...options, modules: true })\n      delete rule.exclude\n      rule.test = /\\.module\\.css$/\n      return rule\n    }\n\n    rules.css = css\n    rules.cssModules = cssModules\n  }\n\n  /**\n   * PostCSS loader.\n   */\n  {\n    const postcss = options => {\n      return {\n        test: /\\.css$/,\n        use: [loaders.css({ importLoaders: 1 }), loaders.postcss(options)],\n      }\n    }\n\n    /**\n     * PostCSS loader, _excludes_ node_modules.\n     */\n    postcss.internal = makeInternalOnly(postcss)\n    postcss.external = makeExternalOnly(postcss)\n    rules.postcss = postcss\n  }\n  /**\n   * Plugins\n   */\n  const plugins = { ...builtinPlugins }\n\n  /**\n   * Minify JavaScript code without regard for IE8. Attempts\n   * to parallelize the work to save time. Generally only add in Production\n   */\n  plugins.minifyJs = ({ terserOptions, ...options } = {}) =>\n    new TerserPlugin({\n      cache: true,\n      // We can't use parallel in WSL because of https://github.com/gatsbyjs/gatsby/issues/6540\n      // This issue was fixed in https://github.com/gatsbyjs/gatsby/pull/12636\n      parallel: !isWsl,\n      exclude: /\\.min\\.js/,\n      sourceMap: true,\n      terserOptions: {\n        ie8: false,\n        mangle: {\n          safari10: true,\n        },\n        parse: {\n          ecma: 8,\n        },\n        compress: {\n          ecma: 5,\n        },\n        output: {\n          ecma: 5,\n        },\n        ...terserOptions,\n      },\n      ...options,\n    })\n\n  plugins.minifyCss = (options = {}) => new OptimizeCssAssetsPlugin(options)\n\n  /**\n   * Extracts css requires into a single file;\n   * includes some reasonable defaults\n   */\n  plugins.extractText = options =>\n    new MiniCssExtractPlugin({\n      filename: `[name].[contenthash].css`,\n      chunkFilename: `[name].[contenthash].css`,\n      ...options,\n    })\n\n  plugins.moment = () => plugins.ignore(/^\\.\\/locale$/, /moment$/)\n\n  plugins.extractStats = options => new GatsbyWebpackStatsExtractor(options)\n\n  return {\n    loaders,\n    rules: (rules: RuleUtils),\n    plugins: (plugins: PluginUtils),\n  }\n}\n"],"file":"webpack-utils.js"}